sudo: required

services:
  - docker

before_install:
  - sudo apt update && sudo apt install curl libfcgi0ldbl -y
  - docker build 
        --no-cache 
        -t 03192859189254/httpd-alpine:latest-dev
        --build-arg BUILD_COMMIT=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` .

script:
# Starting httpd container
 - CURDIR=$(pwd)
 - TEST_HTTPD_CONTAINER_ID=$( docker run -d --name=httpd-alpine -e CONFIG_HTTPD_DOCUMENT_ROOT=/var/www/html -e CONFIG_PHP_FPM_HOST=127.0.0.1 -v $CURDIR/volumes/test_webroot:/var/www/html -p 38080:80 03192859189254/httpd-alpine:latest-dev )
 - TEST_HTTPD_CONTAINER_STATUS=$(sleep 1 && docker inspect -f '{{.State.Running}}' $TEST_HTTPD_CONTAINER_ID)

# Testing httpd container
 - if [ ! "$TEST_HTTPD_CONTAINER_STATUS" = "true" ]; then
        echo "Httpd container failed, print logs and exiting\n";
        docker logs $TEST_HTTPD_CONTAINER_ID;
        exit 1;
    fi
# Running PHP-FPM container
 - if [ "True" = "True" ]; then
        TEST_PHP_CONTAINER_ID=$( docker run -d --net=container:httpd-alpine -v $CURDIR/volumes/test_webroot:/var/www/html quay.io/alphasocket/docker-magento-php-fpm-alpine:7.0 );
        TEST_PHP_CONTAINER_STATUS=$(sleep 1 && docker inspect -f '{{.State.Running}}' $TEST_PHP_CONTAINER_ID);
    fi
# Testing PHP-FPM container
 - if [ ! "$TEST_PHP_CONTAINER_STATUS" = "true" ]; then
        echo "PHP-FPM container failed, print logs and exiting\n";
        docker logs $TEST_PHP_CONTAINER_ID;
        exit 1;
    fi
# Testing httpd
 - HTTP_CODE=$( sleep 1 && curl -sLI 127.0.0.1:38080/index.html -o /dev/null -w '%{http_code}\n' )

# Checking exit code
 - if [ ! "$HTTP_CODE" = "200" ]; then
        echo "### Test failed, received HTTP code ${HTTP_CODE} printing log\n";
        docker logs $TEST_HTTPD_CONTAINER_ID;
        exit 1;
    fi
# Testing PHP service
 - if [ "True" = "True" ]; then
        HTTP_CONTENT=$( sleep 1 && curl 127.0.0.1:38080/index.php );
    fi
# Print success
 - if [ echo "$HTTP_CONTENT" | grep -q "http://www.php.net/" ]; then
        echo "### Test succeeded\n";
    fi


after_success:
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" $DOCKER_REGISTER;
  - if [ "$DOCKER_USERNAME" ]; then
        docker tag 03192859189254/httpd-alpine:latest-dev ${DOCKER_REGISTER}/${DOCKER_USERNAME}/httpd-alpine:latest-dev;
        docker push ${DOCKER_REGISTER}/${DOCKER_USERNAME}/httpd-alpine:latest-dev;
    fi