#!/bin/sh

#
# Local test script to test docker images
#

# exit if a command fails
set -e

CURL=$(which curl)
DOCKER=$(which docker)

if [ "$CURL" = '' ]; then
    echo 'The package curl is required\n'
    exit 1
fi

if [ "$DOCKER" = '' ]; then
    echo 'Docker is required\n'
    exit 1
fi

echo "#\n# Cleaning docker\n#\n"
running_containers=$(docker ps -aq)
if [ "$running_containers" ] 
    then
        docker stop $running_containers -t 0 && docker system prune -f
fi
echo "# Cleaned"

echo "#\n# Running test\n#\n"
# Starting httpd container
echo "### Starting httpd container..."
CURDIR=$(pwd)
TEST_HTTPD_CONTAINER_ID=$( docker run -d --name=httpd-alpine -e CONFIG_PHP_FPM_HOST=127.0.0.1 -v ${CURDIR}/volumes/test_webroot:/var/www/html -p 30256:80 03192859189254/httpd-alpine:latest-dev )
sleep 1
TEST_HTTPD_CONTAINER_STATUS=$(docker inspect -f '{{.State.Running}}' $TEST_HTTPD_CONTAINER_ID)

# Testing httpd container
echo "### Testing httpd container..."
if [ ! "$TEST_HTTPD_CONTAINER_STATUS" = "true" ]; then
    echo "Httpd container failed, print logs and exiting\n";
    docker logs $TEST_HTTPD_CONTAINER_ID;
    exit 1;
fi
# Running PHP-FPM container
echo "### Running PHP-FPM container..."
if [ "True" = "True" ]; then
    TEST_PHP_CONTAINER_ID=$( docker run -d --net=container:httpd-alpine -v ${CURDIR}/volumes/test_webroot:/var/www/html alphasocket/php-fpm-alpine:7.1 );
    sleep 1;
    TEST_PHP_CONTAINER_STATUS=$(docker inspect -f '{{.State.Running}}' $TEST_PHP_CONTAINER_ID);
else 
        TEST_PHP_CONTAINER_STATUS="true";
fi
# Testing PHP-FPM container
echo "### Testing PHP-FPM container..."
if [ ! "$TEST_PHP_CONTAINER_STATUS" = "true" ]; then
    echo "PHP-FPM container failed, print logs and exiting\n";
    docker logs $TEST_PHP_CONTAINER_ID;
    exit 1;
fi
# Testing httpd
echo "### Testing httpd..."
sleep 1
HTTP_CODE=$( curl -sLI 127.0.0.1:30256/index.html -o /dev/null -w '%{http_code}\n' )

# Checking exit code
echo "### Checking exit code..."
if [ ! "$HTTP_CODE" = "200" ]; then
    echo "### Test failed, received HTTP code ${HTTP_CODE} printing log\n";
    docker logs $TEST_HTTPD_CONTAINER_ID;
    exit 1;
fi
# Testing PHP service
echo "### Testing PHP service..."
if [ "True" = "True" ]; then
    CONDITION="curl -sf 127.0.0.1:30256/index.php --max-time 1 -o /dev/null";
    MAX_TRIES=300;
    SECONDS_BETWEEN_TRIES=1;
    c=0;
    while ! eval "$CONDITION"; do if [ $c -ge ${MAX_TRIES} ]; then exit 1; else c=$(($c + 1)); fi; echo "Try $c failed"; sleep ${SECONDS_BETWEEN_TRIES}; done;
    HTTP_CONTENT=$(curl -s 127.0.0.1:30256/index.php);
    PHP_TEST=$( echo "$HTTP_CONTENT" | grep -q "http://www.php.net/" && echo "Success");
fi
# Check PHP test
echo "### Check PHP test..."
if [ "True" = "True" ]; then
    if [ "$PHP_TEST" = "Success" ]; then echo "### Test succeeded\n"; else echo "### Test failed\n"; exit 1; fi;
fi


exit 0